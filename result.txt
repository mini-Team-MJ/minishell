=== MINISHELL TEST RESULTS ===
Test Date: 2025. 08. 20. (ìˆ˜) 21:33:47 EEST
===============================

=== PWD builtin ===
Commands: pwd
Output:
[1;32mminishell> [0mpwd
/home/juhyeonl/hive/minishell/test_files
[DEBUG] Tokens:
[0] type=9, str='pwd', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=9, args[0]='pwd'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== ECHO builtin - simple ===
Commands: echo Hello World
Output:
[1;32mminishell> [0mecho Hello World
Hello World
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='Hello', sq=0, dq=0
[2] type=0, str='World', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== ECHO builtin - with -n ===
Commands: echo -n No newline
Output:
[1;32mminishell> [0mecho -n No newline
No newline[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=8, str='-n', sq=0, dq=0
[2] type=0, str='No', sq=0, dq=0
[3] type=0, str='newline', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== CD builtin - relative path ===
Commands: cd test_subdir\npwd\ncd ..\npwd
Output:
[1;32mminishell> [0mcd test_subdir
[DEBUG] Tokens:
[0] type=0, str='cd', sq=0, dq=0
[1] type=0, str='test_subdir', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cd'
[DEBUG] End commands
[1;32mminishell> [0mpwd
/home/juhyeonl/hive/minishell/test_files/test_subdir
[DEBUG] Tokens:
[0] type=9, str='pwd', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=9, args[0]='pwd'
[DEBUG] End commands
[1;32mminishell> [0mcd ..
[DEBUG] Tokens:
[0] type=0, str='cd', sq=0, dq=0
[1] type=0, str='..', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cd'
[DEBUG] End commands
[1;32mminishell> [0mpwd
/home/juhyeonl/hive/minishell/test_files
[DEBUG] Tokens:
[0] type=9, str='pwd', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=9, args[0]='pwd'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== CD builtin - home directory ===
Commands: cd\npwd
Output:
[1;32mminishell> [0mcd
cd: HOME not set
[DEBUG] Tokens:
[0] type=0, str='cd', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cd'
[DEBUG] End commands
[1;32mminishell> [0mpwd
/home/juhyeonl/hive/minishell/test_files
[DEBUG] Tokens:
[0] type=9, str='pwd', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=9, args[0]='pwd'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== ENV builtin ===
Commands: env
Output:
[1;32mminishell> [0menv
[DEBUG] Tokens:
[0] type=0, str='env', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='env'
[DEBUG] End commands
$W=minishell
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== EXPORT builtin - set variable ===
Commands: export TEST_VAR=hello\necho $TEST_VAR
Output:
[1;32mminishell> [0mexport TEST_VAR=hello
[DEBUG] Tokens:
[0] type=3, str='export', sq=0, dq=0
[1] type=0, str='TEST_VAR=hello', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=3, args[0]='export'
[DEBUG] End commands
[1;32mminishell> [0mecho $TEST_VAR

[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== EXPORT builtin - show all ===
Commands: export
Output:
[1;32mminishell> [0mexport
[DEBUG] Tokens:
[0] type=3, str='export', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=3, args[0]='export'
[DEBUG] End commands
$W=minishell
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== UNSET builtin ===
Commands: export TEST_VAR2=world\necho $TEST_VAR2\nunset TEST_VAR2\necho $TEST_VAR2
Output:
[1;32mminishell> [0mexport TEST_VAR2=world
[DEBUG] Tokens:
[0] type=3, str='export', sq=0, dq=0
[1] type=0, str='TEST_VAR2=world', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=3, args[0]='export'
[DEBUG] End commands
[1;32mminishell> [0mecho $TEST_VAR2

[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[DEBUG] End commands
[1;32mminishell> [0munset TEST_VAR2
[DEBUG] Tokens:
[0] type=6, str='unset', sq=0, dq=0
[1] type=0, str='TEST_VAR2', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=6, args[0]='unset'
[DEBUG] End commands
[1;32mminishell> [0mecho $TEST_VAR2

[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== EXIT builtin - with code ===
Commands: exit 42
Output:
[1;32mminishell> [0mexit 42
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[1] type=0, str='42', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
EXIT CODE: 42
---

=== LS command ===
Commands: ls
Output:
[1;32mminishell> [0mls
fruit.txt
grep_test.txt
test_append.txt
test_input.txt
test_subdir
[DEBUG] Tokens:
[0] type=0, str='ls', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='ls'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== LS with options ===
Commands: ls -la
Output:
[1;32mminishell> [0mls -la
total 28
drwxrwxr-x 3 juhyeonl juhyeonl 4096 Aug 20 21:33 .
drwxrwxr-x 9 juhyeonl juhyeonl 4096 Aug 20 21:33 ..
-rw-rw-r-- 1 juhyeonl juhyeonl   20 Aug 20 21:33 fruit.txt
-rw-rw-r-- 1 juhyeonl juhyeonl   22 Aug 20 21:33 grep_test.txt
-rw-rw-r-- 1 juhyeonl juhyeonl    7 Aug 20 21:33 test_append.txt
-rw-rw-r-- 1 juhyeonl juhyeonl   12 Aug 20 21:33 test_input.txt
drwxrwxr-x 2 juhyeonl juhyeonl 4096 Aug 20 21:33 test_subdir
[DEBUG] Tokens:
[0] type=0, str='ls', sq=0, dq=0
[1] type=0, str='-la', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='ls'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== CAT command ===
Commands: cat test_input.txt
Output:
[1;32mminishell> [0mcat test_input.txt
Hello World
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=0, str='test_input.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== GREP command ===
Commands: grep test grep_test.txt
Output:
[1;32mminishell> [0mgrep test grep_test.txt
test content for grep
[DEBUG] Tokens:
[0] type=0, str='grep', sq=0, dq=0
[1] type=0, str='test', sq=0, dq=0
[2] type=0, str='grep_test.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='grep'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== WC command ===
Commands: wc fruit.txt
Output:
[1;32mminishell> [0mwc fruit.txt
 3  3 20 fruit.txt
[DEBUG] Tokens:
[0] type=0, str='wc', sq=0, dq=0
[1] type=0, str='fruit.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='wc'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Nonexistent command ===
Commands: nonexistent_command
Output:
[1;32mminishell> [0mnonexistent_command
nonexistent_command: command not found
[DEBUG] Tokens:
[0] type=0, str='nonexistent_command', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='nonexistent_command'
[DEBUG] End commands
[DEBUG] Tokens:
[0] type=0, str='nonexistent_command', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='nonexistent_command'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
EXIT CODE: 127
---

=== Command with absolute path ===
Commands: /bin/echo Absolute path test
Output:
[1;32mminishell> [0m/bin/echo Absolute path test
Absolute path test
[DEBUG] Tokens:
[0] type=15, str='/bin/echo', sq=0, dq=0
[1] type=0, str='Absolute', sq=0, dq=0
[2] type=0, str='path', sq=0, dq=0
[3] type=0, str='test', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=15, args[0]='/bin/echo'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Command with relative path ===
Commands: ./minishell --version
Output:
[1;32mminishell> [0m./minishell --version
invalid directory or filename
[DEBUG] Tokens:
[0] type=15, str='./minishell', sq=0, dq=0
[1] type=0, str='--version', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker failed
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
EXIT CODE: 127
---

=== Output redirection > ===
Commands: echo Redirect test > redirect_out.txt\ncat redirect_out.txt
Output:
[1;32mminishell> [0mecho Redirect test > redirect_out.txt
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='Redirect', sq=0, dq=0
[2] type=0, str='test', sq=0, dq=0
[3] type=11, str='>', sq=0, dq=0
[4] type=0, str='redirect_out.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
    outfile='redirect_out.txt', append=0
[DEBUG] End commands
[1;32mminishell> [0mcat redirect_out.txt
Redirect test
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=0, str='redirect_out.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Append redirection >> ===
Commands: echo First line > append_test.txt\necho Second line >> append_test.txt\ncat append_test.txt
Output:
[1;32mminishell> [0mecho First line > append_test.txt
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='First', sq=0, dq=0
[2] type=0, str='line', sq=0, dq=0
[3] type=11, str='>', sq=0, dq=0
[4] type=0, str='append_test.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
    outfile='append_test.txt', append=0
[DEBUG] End commands
[1;32mminishell> [0mecho Second line >> append_test.txt
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='Second', sq=0, dq=0
[2] type=0, str='line', sq=0, dq=0
[3] type=12, str='>>', sq=0, dq=0
[4] type=0, str='append_test.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
    outfile='append_test.txt', append=1
[DEBUG] End commands
[1;32mminishell> [0mcat append_test.txt
First line
Second line
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=0, str='append_test.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Input redirection < ===
Commands: cat < test_input.txt
Output:
[1;32mminishell> [0mcat < test_input.txt
Hello World
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=13, str='<', sq=0, dq=0
[2] type=0, str='test_input.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
    infile='test_input.txt'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Input and output redirection ===
Commands: cat < test_input.txt > combined_test.txt\ncat combined_test.txt
Output:
[1;32mminishell> [0mcat < test_input.txt > combined_test.txt
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=13, str='<', sq=0, dq=0
[2] type=0, str='test_input.txt', sq=0, dq=0
[3] type=11, str='>', sq=0, dq=0
[4] type=0, str='combined_test.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
    infile='test_input.txt'
    outfile='combined_test.txt', append=0
[DEBUG] End commands
[1;32mminishell> [0mcat combined_test.txt
Hello World
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=0, str='combined_test.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Multiple redirections ===
Commands: echo Test > file1.txt\necho More >> file1.txt\ncat < file1.txt > file2.txt\ncat file2.txt
Output:
[1;32mminishell> [0mecho Test > file1.txt
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='Test', sq=0, dq=0
[2] type=11, str='>', sq=0, dq=0
[3] type=0, str='file1.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
    outfile='file1.txt', append=0
[DEBUG] End commands
[1;32mminishell> [0mecho More >> file1.txt
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='More', sq=0, dq=0
[2] type=12, str='>>', sq=0, dq=0
[3] type=0, str='file1.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
    outfile='file1.txt', append=1
[DEBUG] End commands
[1;32mminishell> [0mcat < file1.txt > file2.txt
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=13, str='<', sq=0, dq=0
[2] type=0, str='file1.txt', sq=0, dq=0
[3] type=11, str='>', sq=0, dq=0
[4] type=0, str='file2.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
    infile='file1.txt'
    outfile='file2.txt', append=0
[DEBUG] End commands
[1;32mminishell> [0mcat file2.txt
Test
More
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=0, str='file2.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Simple pipe ===
Commands: ls | grep test
Output:
[1;32mminishell> [0mls | grep test
append_test.txt
combined_test.txt
grep_test.txt
test_append.txt
test_input.txt
test_subdir
[DEBUG] Tokens:
[0] type=0, str='ls', sq=0, dq=0
[1] type=1, str='|', sq=0, dq=0
[2] type=0, str='grep', sq=0, dq=0
[3] type=0, str='test', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 2
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='ls'
[1] type=0, args[0]='grep'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Multiple pipes ===
Commands: cat fruit.txt | grep a | wc -l
Output:
[1;32mminishell> [0mcat fruit.txt | grep a | wc -l
2
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=0, str='fruit.txt', sq=0, dq=0
[2] type=1, str='|', sq=0, dq=0
[3] type=0, str='grep', sq=0, dq=0
[4] type=0, str='a', sq=0, dq=0
[5] type=1, str='|', sq=0, dq=0
[6] type=0, str='wc', sq=0, dq=0
[7] type=0, str='-l', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 3
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
[1] type=0, args[0]='grep'
[2] type=0, args[0]='wc'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Pipe with builtin ===
Commands: echo Hello World | cat
Output:
[1;32mminishell> [0mecho Hello World | cat
Hello World
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='Hello', sq=0, dq=0
[2] type=0, str='World', sq=0, dq=0
[3] type=1, str='|', sq=0, dq=0
[4] type=0, str='cat', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 2
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[1] type=0, args[0]='cat'
[DEBUG] End commands
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='Hello', sq=0, dq=0
[2] type=0, str='World', sq=0, dq=0
[3] type=1, str='|', sq=0, dq=0
[4] type=0, str='cat', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 2
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[1] type=0, args[0]='cat'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Long pipe chain ===
Commands: ls | head -5 | tail -3 | cat
Output:
[1;32mminishell> [0mls | head -5 | tail -3 | cat
file1.txt
file2.txt
fruit.txt
[DEBUG] Tokens:
[0] type=0, str='ls', sq=0, dq=0
[1] type=1, str='|', sq=0, dq=0
[2] type=0, str='head', sq=0, dq=0
[3] type=0, str='-5', sq=0, dq=0
[4] type=1, str='|', sq=0, dq=0
[5] type=0, str='tail', sq=0, dq=0
[6] type=0, str='-3', sq=0, dq=0
[7] type=1, str='|', sq=0, dq=0
[8] type=0, str='cat', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 4
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='ls'
[1] type=0, args[0]='head'
[2] type=0, args[0]='tail'
[3] type=0, args[0]='cat'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Pipe with redirection ===
Commands: ls | grep minishell > pipe_output.txt\ncat pipe_output.txt
Output:
[1;32mminishell> [0mls | grep minishell > pipe_output.txt
[DEBUG] Tokens:
[0] type=0, str='ls', sq=0, dq=0
[1] type=1, str='|', sq=0, dq=0
[2] type=0, str='grep', sq=0, dq=0
[3] type=0, str='minishell', sq=0, dq=0
[4] type=11, str='>', sq=0, dq=0
[5] type=0, str='pipe_output.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 2
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='ls'
[1] type=0, args[0]='grep'
    outfile='pipe_output.txt', append=0
[DEBUG] End commands
[1;32mminishell> [0mcat pipe_output.txt
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=0, str='pipe_output.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Basic heredoc ===
Commands: cat << EOF\nHello from heredoc\nSecond line\nEOF
Output:
[1;32mminishell> [0mcat << EOF
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=14, str='<<', sq=0, dq=0
[2] type=0, str='EOF', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
    heredoc_delimiter='EOF'
[DEBUG] End commands
> Hello from heredoc
> Second line
> EOF
Hello from heredoc
Second line
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=14, str='<<', sq=0, dq=0
[2] type=0, str='EOF', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
    heredoc_delimiter='EOF'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Heredoc with variables ===
Commands: cat << END\nCurrent directory: $PWD\nEND
Output:
[1;32mminishell> [0mcat << END
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=14, str='<<', sq=0, dq=0
[2] type=0, str='END', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
    heredoc_delimiter='END'
[DEBUG] End commands
> Current directory: $PWD
> END
Current directory: $PWD
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=14, str='<<', sq=0, dq=0
[2] type=0, str='END', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
    heredoc_delimiter='END'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Heredoc to file ===
Commands: cat << HEREDOC > heredoc_output.txt\nThis is heredoc content\nLine 2\nHEREDOC\ncat heredoc_output.txt
Output:
[1;32mminishell> [0mcat << HEREDOC > heredoc_output.txt
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=14, str='<<', sq=0, dq=0
[2] type=0, str='HEREDOC', sq=0, dq=0
[3] type=11, str='>', sq=0, dq=0
[4] type=0, str='heredoc_output.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
    outfile='heredoc_output.txt', append=0
    heredoc_delimiter='HEREDOC'
[DEBUG] End commands
> This is heredoc content
> Line 2
> HEREDOC
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=14, str='<<', sq=0, dq=0
[2] type=0, str='HEREDOC', sq=0, dq=0
[3] type=11, str='>', sq=0, dq=0
[4] type=0, str='heredoc_output.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
    outfile='heredoc_output.txt', append=0
    heredoc_delimiter='HEREDOC'
[DEBUG] End commands
[1;32mminishell> [0mcat heredoc_output.txt
This is heredoc content
Line 2
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=0, str='heredoc_output.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Environment variable expansion ===
Commands: echo $HOME
Output:
[1;32mminishell> [0mecho $HOME

[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Exit status variable ===
Commands: ls nonexistent\necho Exit status: $?
Output:
[1;32mminishell> [0mls nonexistent
ls: cannot access 'nonexistent': No such file or directory
[DEBUG] Tokens:
[0] type=0, str='ls', sq=0, dq=0
[1] type=0, str='nonexistent', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='ls'
[DEBUG] End commands
[1;32mminishell> [0mecho Exit status: $?
Exit status: 2?
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='Exit', sq=0, dq=0
[2] type=0, str='status:', sq=0, dq=0
[3] type=17, str='$?', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Exit status after success ===
Commands: echo success\necho Exit status: $?
Output:
[1;32mminishell> [0mecho success
success
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='success', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[DEBUG] End commands
[1;32mminishell> [0mecho Exit status: $?
Exit status: 0?
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='Exit', sq=0, dq=0
[2] type=0, str='status:', sq=0, dq=0
[3] type=17, str='$?', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Custom environment variable ===
Commands: export MY_VAR=custom_value\necho $MY_VAR
Output:
[1;32mminishell> [0mexport MY_VAR=custom_value
[DEBUG] Tokens:
[0] type=3, str='export', sq=0, dq=0
[1] type=0, str='MY_VAR=custom_value', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=3, args[0]='export'
[DEBUG] End commands
[1;32mminishell> [0mecho $MY_VAR

[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Single quotes ===
Commands: echo 'Single quote test with $HOME'
Output:
[1;32mminishell> [0mecho 'Single quote test with $HOME'
'Single quote test with $HOME'
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str=''Single quote test with $HOME'', sq=1, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Double quotes ===
Commands: echo "Double quote test with $HOME"
Output:
[1;32mminishell> [0mecho "Double quote test with $HOME"
"Double quote test with /home/juhyeonl"
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='"Double quote test with $HOME"', sq=0, dq=1
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Mixed quotes ===
Commands: echo 'Single' "Double" Mixed
Output:
[1;32mminishell> [0mecho 'Single' "Double" Mixed
'Single' "Double" Mixed
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str=''Single'', sq=1, dq=0
[2] type=0, str='"Double"', sq=0, dq=1
[3] type=0, str='Mixed', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Complex pipe and redirection ===
Commands: ls | grep test | cat > complex_output.txt\ncat complex_output.txt
Output:
[1;32mminishell> [0mls | grep test | cat > complex_output.txt
[DEBUG] Tokens:
[0] type=0, str='ls', sq=0, dq=0
[1] type=1, str='|', sq=0, dq=0
[2] type=0, str='grep', sq=0, dq=0
[3] type=0, str='test', sq=0, dq=0
[4] type=1, str='|', sq=0, dq=0
[5] type=0, str='cat', sq=0, dq=0
[6] type=11, str='>', sq=0, dq=0
[7] type=0, str='complex_output.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 3
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='ls'
[1] type=0, args[0]='grep'
[2] type=0, args[0]='cat'
    outfile='complex_output.txt', append=0
[DEBUG] End commands
[1;32mminishell> [0mcat complex_output.txt
append_test.txt
combined_test.txt
grep_test.txt
test_append.txt
test_input.txt
test_subdir
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=0, str='complex_output.txt', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Multiple commands with semicolon equivalent ===
Commands: echo First\necho Second\necho Third
Output:
[1;32mminishell> [0mecho First
First
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='First', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[DEBUG] End commands
[1;32mminishell> [0mecho Second
Second
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='Second', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[DEBUG] End commands
[1;32mminishell> [0mecho Third
Third
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='Third', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Environment in pipe ===
Commands: export PIPE_VAR=pipe_test\necho $PIPE_VAR | cat
Output:
[1;32mminishell> [0mexport PIPE_VAR=pipe_test
[DEBUG] Tokens:
[0] type=3, str='export', sq=0, dq=0
[1] type=0, str='PIPE_VAR=pipe_test', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=3, args[0]='export'
[DEBUG] End commands
[1;32mminishell> [0mecho $PIPE_VAR | cat

[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=1, str='|', sq=0, dq=0
[2] type=0, str='cat', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 2
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[1] type=0, args[0]='cat'
[DEBUG] End commands
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=1, str='|', sq=0, dq=0
[2] type=0, str='cat', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 2
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[1] type=0, args[0]='cat'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Builtin in pipeline ===
Commands: echo test | grep test | wc -l
Output:
[1;32mminishell> [0mecho test | grep test | wc -l
3
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='test', sq=0, dq=0
[2] type=1, str='|', sq=0, dq=0
[3] type=0, str='grep', sq=0, dq=0
[4] type=0, str='test', sq=0, dq=0
[5] type=1, str='|', sq=0, dq=0
[6] type=0, str='wc', sq=0, dq=0
[7] type=0, str='-l', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 3
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
[1] type=0, args[0]='grep'
[2] type=0, args[0]='wc'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Permission denied ===
Commands: cat /etc/shadow
Output:
[1;32mminishell> [0mcat /etc/shadow
cat: /etc/shadow: Permission denied
[DEBUG] Tokens:
[0] type=0, str='cat', sq=0, dq=0
[1] type=15, str='/etc/shadow', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='cat'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
EXIT CODE: 1
---

=== Directory as command ===
Commands: test_subdir
Output:
[1;32mminishell> [0mtest_subdir
test_subdir: command not found
[DEBUG] Tokens:
[0] type=0, str='test_subdir', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='test_subdir'
[DEBUG] End commands
[DEBUG] Tokens:
[0] type=0, str='test_subdir', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='test_subdir'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
EXIT CODE: 127
---

=== Invalid redirection ===
Commands: echo test > /dev/null/invalid
Output:
[1;32mminishell> [0mecho test > /dev/null/invalid
/dev/null/invalid: Not a directory
[DEBUG] Tokens:
[0] type=5, str='echo', sq=0, dq=0
[1] type=0, str='test', sq=0, dq=0
[2] type=11, str='>', sq=0, dq=0
[3] type=15, str='/dev/null/invalid', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=5, args[0]='echo'
    outfile='/dev/null/invalid', append=0
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
EXIT CODE: 1
---

=== Broken pipe ===
Commands: ls | exit
Output:
[1;32mminishell> [0mls | exit
[DEBUG] Tokens:
[0] type=0, str='ls', sq=0, dq=0
[1] type=1, str='|', sq=0, dq=0
[2] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 2
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='ls'
[1] type=7, args[0]='exit'
[DEBUG] End commands
[DEBUG] Tokens:
[0] type=0, str='ls', sq=0, dq=0
[1] type=1, str='|', sq=0, dq=0
[2] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 2
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Found PIPE token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='ls'
[1] type=7, args[0]='exit'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

=== Ctrl-C simulation in script ===
Commands: sleep 1
Output:
[1;32mminishell> [0msleep 1
[DEBUG] Tokens:
[0] type=0, str='sleep', sq=0, dq=0
[1] type=0, str='1', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Processing next token
[DEBUG] make_coms: Moving to next token
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=0, args[0]='sleep'
[DEBUG] End commands
[1;32mminishell> [0mexit
exit
[DEBUG] Tokens:
[0] type=7, str='exit', sq=0, dq=0
[DEBUG] End tokens
[DEBUG] init_coms: Starting
[DEBUG] init_coms: Calling count_coms
[DEBUG] init_coms: count_coms returned 1
[DEBUG] init_coms: Calling make_coms
[DEBUG] make_coms: Starting
[DEBUG] make_coms: Calling make_com
[DEBUG] make_coms: make_com succeeded
[DEBUG] make_coms: Calling add_com
[DEBUG] make_coms: add_com completed
[DEBUG] make_coms: Returning
[DEBUG] init_coms: make_coms completed
[DEBUG] init_coms: Calling path_checker
[DEBUG] init_coms: path_checker passed
[DEBUG] init_coms: Returning
[DEBUG] Commands:
[0] type=7, args[0]='exit'
[DEBUG] End commands
---

